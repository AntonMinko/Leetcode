using Solutions;
using Xunit;
using Xunit.Abstractions;
using System.Text;
using System.Diagnostics;
using FluentAssertions;

namespace Tests
{
    public class RussianDollEnvelopeTests : BaseTests
    {
        public RussianDollEnvelopeTests(ITestOutputHelper output) : base(output)
        {
        }

        // [Fact]
        // public void Test1()
        // {
        //     var envelopes = new int[][] {
        //         new[] {5, 4},
        //         new[] {6, 4},
        //         new[] {6, 7},
        //         new[] {2, 3}
        //     };

        //     var sut = new RussianDollEnvelope();
        //     int actual = MeasureAndExecute(1, () => sut.MaxEnvelopes(envelopes));

        //     actual.Should().Be(3);
        // }

        // [Fact]
        // public void Test2()
        // {
        //     var envelopes = new int[][] {
        //         new[] {1, 1},
        //         new[] {1, 1},
        //         new[] {1, 1},
        //     };

        //     var sut = new RussianDollEnvelope();
        //     int actual = MeasureAndExecute(2, () => sut.MaxEnvelopes(envelopes));

        //     actual.Should().Be(1);
        // }

        [Fact]
        public void Test3()
        {
            var envelopes = new int[][] {
new[] {856, 533},
new[] { 583,772},
new[] { 980,524},
new[] { 203, 666 },
new[] { 987, 151 },
new[] { 274, 802 },
new[] { 982, 85 },
new[] { 359, 160 },
new[] { 58, 823 },
new[] { 512, 381 },
new[] { 796, 655 },
new[] { 341, 427 },
new[] { 145, 114 },
new[] { 76, 306 },
new[] { 760, 929 },
new[] { 836, 751 },
new[] { 922, 678 },
new[] { 128, 317 },
new[] { 185, 953 },
new[] { 115, 845 },
new[] { 829, 991 },
new[] { 93, 694 },
new[] { 317, 434 },
new[] { 818, 571 },
new[] { 352, 638 },
new[] { 926, 780 },
new[] { 819, 995 },
new[] { 54, 69 },
new[] { 191, 392 },
new[] { 377, 180 },
new[] { 669, 952 },
new[] { 588, 920 },
new[] { 335, 316 },
new[] { 48, 769 },
new[] { 188, 661 },
new[] { 916, 933 },
new[] { 674, 308 },
new[] { 356, 556 },
new[] { 350, 249 },
new[] { 686, 851 },
new[] { 600, 178 },
new[] { 849, 439 },
new[] { 597, 181 },
new[] { 80, 382 },
new[] { 647, 105 },
new[] { 4, 836 },
new[] { 901, 907 },
new[] { 595, 347 },
new[] { 214, 335 },
new[] { 956, 382 },
new[] { 77, 979 },
new[] { 489, 365 },
new[] { 80, 220 },
new[] { 859, 270 },
new[] { 676, 665 },
new[] { 636, 46 },
new[] { 906, 457 },
new[] { 522, 769 },
new[] { 2, 758 },
new[] { 206, 586 },
new[] { 444, 904 },
new[] { 912, 370 },
new[] { 64, 871 },
new[] { 59, 409 },
new[] { 599, 238 },
new[] { 437, 58 },
new[] { 309, 767 },
new[] { 258, 440 },
new[] { 922, 369 },
new[] { 848, 650 },
new[] { 478, 76 },
new[] { 84, 704 },
new[] { 314, 207 },
new[] { 138, 823 },
new[] { 994, 764 },
new[] { 604, 595 },
new[] { 537, 876 },
new[] { 877, 253 },
new[] { 945, 185 },
new[] { 623, 497 },
new[] { 968, 633 },
new[] { 172, 705 },
new[] { 577, 388 },
new[] { 819, 763 },
new[] { 409, 905 },
new[] { 275, 532 },
new[] { 729, 593 },
new[] { 547, 226 },
new[] { 445, 495 },
new[] { 398, 544 },
new[] { 243, 500 },
new[] { 308, 24 },
new[] { 652, 452 },
new[] { 93, 885 },
new[] { 75, 884 },
new[] { 243, 113 },
new[] { 600, 555 },
new[] { 756, 596 },
new[] { 892, 762 },
new[] { 402, 653 },
new[] { 916, 975 },
new[] { 770, 220 },
new[] { 455, 579 },
new[] { 889, 68 },
new[] { 306, 899 },
new[] { 567, 290 },
new[] { 809, 653 },
new[] { 92, 329 },
new[] { 370, 861 },
new[] { 632, 754 },
new[] { 321, 689 },
new[] { 190, 812 },
new[] { 88, 701 },
new[] { 79, 310 },
new[] { 917, 91 },
new[] { 751, 480 },
new[] { 750, 39 },
new[] { 781, 978 },
new[] { 778, 912 },
new[] { 946, 559 },
new[] { 529, 621 },
new[] { 55, 295 },
new[] { 473, 748 },
new[] { 646, 854 },
new[] { 930, 913 },
new[] { 116, 734 },
new[] { 647, 812 },
new[] { 426, 172 },
new[] { 122, 14 },
new[] { 522, 843 },
new[] { 88, 308 },
new[] { 719, 602 },
new[] { 712, 928 },
new[] { 303, 890 },
new[] { 973, 886 },
new[] { 276, 354 },
new[] { 660, 720 },
new[] { 708, 387 },
new[] { 776, 605 },
new[] { 653, 815 },
new[] { 448, 285 },
new[] { 549, 959 },
new[] { 139, 365 },
new[] { 74, 952 },
new[] { 372, 424 },
new[] { 642, 504 },
new[] { 361, 901 },
new[] { 620, 612 },
new[] { 313, 301 },
new[] { 397, 225 },
new[] { 446, 716 },
new[] { 17, 361 },
new[] { 160, 812 },
new[] { 171, 529 },
new[] { 180, 482 },
new[] { 454, 600 },
new[] { 228, 872 },
new[] { 204, 492 },
new[] { 607, 889 },
new[] { 86, 79 },
new[] { 494, 78 },
new[] { 442, 404 },
new[] { 462, 127 },
new[] { 935, 402 },
new[] { 509, 649 },
new[] { 458, 941 },
new[] { 219, 444 },
new[] { 306, 57 },
new[] { 674, 617 },
new[] { 79, 652 },
new[] { 73, 735 },
new[] { 900, 756 },
new[] { 649, 294 },
new[] { 982, 754 },
new[] { 521, 439 },
new[] { 356, 265 },
new[] { 240, 533 },
new[] { 865, 44 },
new[] { 744, 379 },
new[] { 97, 454 },
new[] { 65, 480 },
new[] { 544, 191 },
new[] { 18, 191 },
new[] { 503, 38 },
new[] { 696, 658 },
new[] { 61, 884 },
new[] { 793, 984 },
new[] { 383, 364 },
new[] { 280, 467 },
new[] { 888, 662 },
new[] { 133, 643 },
new[] { 365, 512 },
new[] { 610, 975 },
new[] { 98, 584 },
new[] { 40, 177 },
new[] { 548, 102 },
// new[] { 80, 98 },
// new[] { 986, 951 },
// new[] { 264, 258 },
// new[] { 583, 734 },
// new[] { 353, 322 },
// new[] { 427, 551 },
// new[] { 80, 660 },
// new[] { 273, 609 },
// new[] { 980, 871 },
// new[] { 739, 802 },
// new[] { 366, 836 },
// new[] { 55, 509 },
// new[] { 889, 720 },
// new[] { 857, 661 },
// new[] { 48, 489 },
// new[] { 119, 26 },
// new[] { 31, 180 },
// new[] { 472, 673 },
// new[] { 960, 951 },
// new[] { 383, 500 },
// new[] { 928, 351 },
// new[] { 848, 705 },
// new[] { 969, 766 },
// new[] { 311, 714 },
// new[] { 861, 230 },
// new[] { 34, 596 },
// new[] { 38, 642 },
// new[] { 1, 955 },
// new[] { 698, 846 },
// new[] { 784, 791 },
// new[] { 760, 344 },
// new[] { 677, 239 },
// new[] { 969, 191 },
// new[] { 539, 644 },
// new[] { 470, 418 },
// new[] { 289, 357 },
// new[] { 269, 446 },
// new[] { 668, 245 },
// new[] { 293, 719 },
// new[] { 937, 103 },
// new[] { 575, 297 },
// new[] { 874, 656 },
// new[] { 714, 257 },
// new[] { 934, 396 },
// new[] { 109, 904 },
// new[] { 89, 635 },
// new[] { 374, 545 },
// new[] { 316, 587 },
// new[] { 158, 121 },
// new[] { 901, 969 },
// new[] { 284, 564 },
// new[] { 666, 568 },
// new[] { 993, 409 },
// new[] { 370, 637 },
// new[] { 443, 694 },
// new[] { 576, 160 },
// new[] { 262, 357 },
// new[] { 590, 729 },
// new[] { 194, 976 },
// new[] { 743, 376 },
// new[] { 348, 80 },
// new[] { 669, 527 },
// new[] { 338, 953 },
// new[] { 236, 785 },
// new[] { 144, 460 },
// new[] { 438, 457 },
// new[] { 517, 951 },
// new[] { 545, 647 },
// new[] { 158, 556 },
// new[] { 905, 591 },
// new[] { 793, 609 },
// new[] { 571, 643 },
// new[] { 9, 850 },
// new[] { 581, 490 },
// new[] { 804, 394 },
// new[] { 635, 483 },
// new[] { 457, 30 },
// new[] { 42, 621 },
// new[] { 65, 137 },
// new[] { 424, 864 },
// new[] { 536, 455 },
// new[] { 59, 492 },
// new[] { 645, 734 },
// new[] { 892, 571 },
// new[] { 762, 593 },
// new[] { 608, 384 },
// new[] { 558, 257 },
// new[] { 692, 420 },
// new[] { 973, 203 },
// new[] { 531, 51 },
// new[] { 349, 861 },
// new[] { 804, 649 },
// new[] { 3, 611 },
// new[] { 6, 468 },
// new[] { 298, 568 },
// new[] { 651, 767 },
// new[] { 251, 142 },
// new[] { 173, 974 },
// new[] { 117, 728 },
// new[] { 326, 562 },
// new[] { 894, 288 },
// new[] { 814, 555 },
// new[] { 420, 771 },
// new[] { 20, 775 },
// new[] { 445, 247 },
// new[] { 243, 592 },
// new[] { 186, 173 },
// new[] { 101, 800 },
// new[] { 590, 876 },
// new[] { 515, 534 },
// new[] { 73, 540 },
// new[] { 333, 215 },
// new[] { 902, 394 },
// new[] { 640, 787 },
// new[] { 596, 298 },
// new[] { 984, 712 },
// new[] { 307, 378 },
// new[] { 540, 646 },
// new[] { 473, 743 },
// new[] { 340, 387 },
// new[] { 756, 217 },
// new[] { 139, 493 },
// new[] { 9, 742 },
// new[] { 195, 25 },
// new[] { 763, 823 },
// new[] { 451, 693 },
// new[] { 24, 298 },
// new[] { 645, 595 },
// new[] { 224, 770 },
// new[] { 976, 41 },
// new[] { 832, 78 },
// new[] { 599, 705 },
// new[] { 487, 734 },
// new[] { 818, 134 },
// new[] { 225, 431 },
// new[] { 380, 566 },
// new[] { 395, 680 },
// new[] { 294, 320 },
// new[] { 915, 201 },
// new[] { 553, 480 },
// new[] { 318, 42 },
// new[] { 627, 94 },
// new[] { 164, 959 },
// new[] { 92, 715 },
// new[] { 588, 689 },
// new[] { 734, 983 },
// new[] { 976, 334 },
// new[] { 846, 573 },
// new[] { 676, 521 },
// new[] { 449, 69 },
// new[] { 745, 810 },
// new[] { 961, 722 },
// new[] { 416, 409 },
// new[] { 135, 406 },
// new[] { 234, 357 },
// new[] { 873, 61 },
// new[] { 20, 521 },
// new[] { 525, 31 },
// new[] { 659, 688 },
// new[] { 424, 554 },
// new[] { 203, 315 },
// new[] { 16, 240 },
// new[] { 288, 273 },
// new[] { 281, 623 },
// new[] { 651, 659 },
// new[] { 939, 32 },
// new[] { 732, 373 },
// new[] { 778, 728 },
// new[] { 340, 432 },
// new[] { 335, 80 },
// new[] { 33, 835 },
// new[] { 835, 651 },
// new[] { 317, 156 },
// new[] { 284, 119 },
// new[] { 543, 159 },
// new[] { 719, 820 },
// new[] { 961, 424 },
// new[] { 88, 178 },
// new[] { 621, 146 },
// new[] { 594, 649 },
// new[] { 659, 433 },
// new[] { 527, 441 },
// new[] { 118, 160 },
// new[] { 92, 217 },
// new[] { 489, 38 },
// new[] { 18, 359 },
// new[] { 833, 136 },
// new[] { 470, 897 },
// new[] { 106, 123 },
// new[] { 831, 674 },
// new[] { 181, 191 },
// new[] { 892, 780 },
// new[] { 377, 779},
// new[] { 608, 618 },
// new[] { 618, 423 },
// new[] { 180, 323 },
// new[] { 390, 803 },
// new[] { 562, 412 },
// new[] { 107, 905 },
// new[] { 902, 281 },
// new[] { 718, 540 },
// new[] { 16, 966 },
// new[] { 678, 455 },
// new[] { 597, 135 },
// new[] { 840, 7 },
// new[] { 886, 45 },
// new[] { 719, 937 },
// new[] { 890, 173 }
            };

            var sut = new RussianDollEnvelope();
            var actual = MeasureAndExecute(4, () => sut.MaxEnvelopes(envelopes));
            output.WriteLine(actual);
            actual.Should().Be("");
        }
    }
}